@namespace WebUI.CustomComponents

@using Core.Entitites
@using Core
@using System.Text

<MudTable T="ComparedBomLine"
          Filter="new Func<ComparedBomLine, bool>(FilterAllColumns)"
          Items="ComparedBomLines ?? Array.Empty<ComparedBomLine>().ToList()"
          insta>
    
    <ToolBarContent>
        <MudText Typo="Typo.h6">Comparison Preview</MudText>
        <MudSpacer/>
        <MudTextField Immediate="true" @bind-Value="_searchString" Placeholder="Search any column" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>
            <MudTableSortLabel
                SortBy="new Func<ComparedBomLine, object>(x => x.Quantity)">
                Quantity
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel
                SortBy="new Func<ComparedBomLine, object>(x => x.PartNumber)">
                Part Number
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel
                SortBy="new Func<ComparedBomLine, object>(x => string.Join(',', x.Designators.Select(d => d.Name)))">
                Designators
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel
                SortBy="new Func<ComparedBomLine, object>(x => x.Description)">
                Description
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel
                SortBy="new Func<ComparedBomLine, object>(x => x.ComparisonStatus)">
                Comparison Status
            </MudTableSortLabel>
        </MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Quantity">@context.Quantity</MudTd>
        <MudTd DataLabel="Part Number">@context.PartNumber</MudTd>
        <MudTd DataLabel="Designators">
            @foreach (var designator in context.Designators)
            {
                if (designator.DesignatorComparisonStatus == DesignatorComparisonStatus.Added)
                {
                    <MudText Inline="true" Color="@Color.Success">@designator.Name</MudText>
                }
                else if (designator.DesignatorComparisonStatus == DesignatorComparisonStatus.Removed)
                {
                    <MudText Style="text-decoration: line-through" Inline="true" Color="@Color.Error">@designator.Name</MudText>
                }
                else
                {
                    <MudText Inline="true">@designator.Name</MudText>
                }

                if (designator != context.Designators.Last())
                {
                    @:,&nbsp;
                }
            }
        </MudTd>
        <MudTd DataLabel="Description">@context.Description</MudTd>
        <MudTd DataLabel="Comparison Status">@context.ComparisonStatus</MudTd>
    </RowTemplate>
    <NoRecordsContent>
        <MudText>Comparison not done</MudText>
    </NoRecordsContent>
    <PagerContent>
        <MudTablePager/>
    </PagerContent>
</MudTable>

@code {
    [Parameter]
    public List<ComparedBomLine>? ComparedBomLines { get; set; }
    
    private string _searchString = string.Empty;
    
    private bool FilterAllColumns(ComparedBomLine line)
    {
        if (string.IsNullOrWhiteSpace(_searchString))
            return true;

        var searchString = _searchString.ToLowerInvariant();
        return line.Quantity.ToString().Contains(searchString)
               || line.PartNumber.ToLowerInvariant().Contains(searchString)
               || line.Description.ToLowerInvariant().Contains(searchString)
               || line.Designators.Any(d => d.Name.ToLowerInvariant().Contains(searchString));
    }
}